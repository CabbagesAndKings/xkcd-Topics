{
    "contents" : "\nsetwd('C:/Projects/Ongoing/LDA')\nrequire(RTextTools)\nrequire(topicmodels)\n\n#For visualizations\nrequire(RColorBrewer)\nrequire(ggplot2)\n\n#############################\n### Basic LDA Sanity test ###\n#############################\n\ndata(NYTimes)\n\ndfny <- NYTimes[sample(1:3100,size=1000,replace=FALSE),]\na\nsystem.time(\n\tdtm <- create_matrix(cbind(as.vector(dfny$Title),as.vector(dfny$Subject)),\n\t\t\t\t\t\t language=\"english\", removeNumbers=TRUE, stemWords=TRUE, weighting=weightTf)\n)\n\n\nk <- length(unique(df$Topic.Code))\nsystem.time( lda <- LDA(dtm, k) )\n\nterms(lda)\ntopics(lda)[1:5]\n\n\n\n###########################\n#### Test on CIBC Data ####\n###########################\n\ndf <- read.csv(\"LDA_data_20k_from3fields.csv\",head=T,colClasses=\"character\")\nn <- 2000\ndfsmall <- df[sample(1:nrow(df),size=n,replace=FALSE),]\n\nsystem.time(\n\tdtm <- create_matrix(dfsmall$text,\n\t\t\t\t\t\t language=\"english\", removeNumbers=TRUE,\n\t\t\t\t\t\t stemWords=TRUE, weighting=weightTf)\n)\n\n##########\n\n# Drop terms with absurdly low total counts\nterm.counts <- colSums(as.matrix(dtm))\ndtm2 <- dtm[,term.counts>=5]\n\n# Drop documents with no text left\ndtm2 <- dtm2[rowSums(as.matrix(dtm2))>0,]\n\ndim(dtm2)\n\n\nset.seed(5)\ntrainpoints <- sample(1:nrow(dtm2),0.75*nrow(dtm2),replace=F)\n\nk <- 10\nsystem.time( lda <- LDA(dtm2[trainpoints,], k) )\n\nterms(lda)\n\nt<-topics(lda)\nnames(t)<-1:length(t)\nhist(t,breaks=c(0,1:k),labels=terms(lda))\n\n## Now, let's check out distributions on seen and unseen data\ntermgenerator <- posterior(lda)$terms\ntrain.topics <- posterior(lda,dtm2[trainpoints,])$topics\ntest.topics  <- posterior(lda,dtm2[-trainpoints,])$topics\nrow.names(train.topics) <- 1: nrow(train.topics)\nrow.names(test.topics) <- 1: nrow(test.topics)\n\nwrite.csv(train.topics,\"train.topics.csv\",row.names=F,quot=F)\nwrite.csv(test.topics,\"test.topics.csv\",row.names=F,quot=F)\n\n#barplot(t(train.topics[1:15,]),col=brewer.pal(ncol(train.topics),\"Spectral\"),beside=F,horiz=T)\n#barplot(t(train.topics[1:15,]),col=brewer.pal(ncol(train.topics),\"Spectral\"),beside=T,horiz=F)\n\n#######\n#Visualize\n\nlibrary(reshape2)\nlibrary(RColorBrewer)\n\nd<-as.data.frame(train.topics[1:30,])\nd<-cbind(Doc=factor(1:nrow(d)),d)\n\nmd<-melt(d,id.vars=\"Doc\",variable.name=\"topic\")\nt<-terms(lda,3)\nt<-apply(t,2,paste,collapse=\",\")\nnames(t)<-1:length(t)\n\nbplot<- ggplot(md, aes(x=Doc,y=value)) + \n\tgeom_bar(stat=\"identity\",position=\"stack\",aes(fill=topic))\n\n#bplot + scale_fill_manual(values=brewer.pal(10,\"Spectral\"), name=\"Topic\", breaks=1:10,labels=t)\nbplot + scale_fill_manual(values=brewer.pal(10,\"RdYlBu\"), name=\"Topic\", breaks=1:10,labels=t) \n\t\n\n\n##########\n\nterms(lda)\n\ni=4\nti<-which(topics(lda)==i)\nnames(ti) <- 1:length(ti)\nmi<-as.matrix(dtm)[ti,]\nsi<-apply(mi,2,sum)\nhead(sort(si,dec=T))\n\n\n#matplot(t(train.topics[1:5,]),pch=19)\n#matlines(t(train.topics[1:5,]),pch=19)\n\nbarplot(t(train.topics[1:30,]),col=brewer.pal(ncol(train.topics),\"Spectral\"),beside=F,horiz=T)\n\n#################\nlibrary(topicmodels)\ndata(AssociatedPress)\ntrain <- AssociatedPress[1:100]\ntest <- AssociatedPress[101:150]\n\ntrain.lda <- LDA(train,2)\n\ntest.topics <- posterior(train.lda,test)$topics\n\n#extract top 5 terms for each topic and assign as variable names\ncolnames(test.topics) <- apply(terms(train.lda,5),2,paste,collapse=\",\")\nhead(test.topics)\n\n#round to one topic if you'd prefer\ntest.topics <- apply(test.topics,1,function(x) colnames(test.topics)[which.max(x)])\nhead(test.topics)\n",
    "created" : 1379576887952.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1397230785",
    "id" : "2EE940AE",
    "lastKnownWriteTime" : 1379393801,
    "path" : "C:/Projects/Ongoing/LDA/LDA test1.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}